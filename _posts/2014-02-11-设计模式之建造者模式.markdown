---
layout: post
title:  "设计模式之建造者模式"
date:   2014-02-11 23:01:09
categories: 设计模式 建造着模式
---
本篇文章让我们分析一下建造者模式，其实，我们在平时的开发过程中，已经经常在使用建造者模式了，例如安卓中的AlertDialog就是采用建造者模式来实现的，但是，我们应该在什么时候使用建造者模式呢，也就是建造者模式的使用场景是什么呢？为什么要使用建造者模式，若是不使用会有什么坏处，使用又会有什么好处呢？那么就让我们带着这些疑问慢慢揭开建造者模式的神秘面纱吧！

下面首先看一下`思维导图` ：
![Activity基础](http://7xt310.com2.z0.glb.clouddn.com/Activity%E5%9F%BA%E7%A1%80.png)


## 前提

不知道大家有木有看过《火影忍者》这部动漫，里面有很多忍者（不同国家，不同村落，不同等级）都在努力修行，都在试图改变自己的命运，其中，主人公漩涡鸣人更是一个励志的经典存在，从吊车尾最终实现梦想成为火影，确实经历了太多太多的坎坷。那么本篇文章咱们就以忍者为例来一步一步探讨建造者模式吧！

假如，我们现在有一个忍者，他有很多属性，但是只有编号和姓名是必须的，其它都是可选的，那么我们怎么来创建一个忍者对象呢？

public class Ninja {
    //忍者编号(必须)
    private final long id;
    //忍者名字（必须）
    private final String name;
    //所属国家（可选）
    private final String country;
    //忍者等级（可选）
    private final String rank;
    ...其它可选属性
｝

我们看到每个属性都用final来修饰了，说明每个属性都要在构造方法中被初始化，我们又必须提供各种参数数量的构造方法，到时候用排列组合一计算，哇塞，好多构造方法，那我们一个类里面看到的代码都是构造方法了，这就导致代码的可读性和维护性变差！






  ---
